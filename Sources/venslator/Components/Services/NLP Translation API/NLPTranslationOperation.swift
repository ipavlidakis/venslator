//
//  NLPTranslationOperation.swift
//  venslator
//
//  Created by Ilias Pavlidakis on 18/09/2020.
//

import Foundation

private let kAPIUrl: URL = URL(string: "https://nlp-translation.p.rapidapi.com/v1/translate")!

enum NLPTranslationOperation {

    static func makeConfiguration(
        for targetLanguage: String,
        protectedWords: [String],
        command: TranslateCommand
    ) throws -> Configuration {
        let fileHeader = """
        // Generated by venslator
        // by using the NLPTranslation API
        // Created by Ilias Pavlidakis
        """
        return try NLPTranslationOperation.Configuration(
            sourceLanguage: command.sourceLanguage,
            targetLanguage: targetLanguage,
            path: command.path,
            outputPath: command.outputPath,
            protectedWords: protectedWords,
            apiKey: command.apiKey,
            fileHeader: fileHeader
        )
    }

    static func makeRequest(
        _ configuration: ConfigurationProtocol,
        _ key: String,
        _ value: String
    ) -> URLRequest {

        guard let configuration = configuration as? NLPTranslationOperation.Configuration else {
            fatalError("NLPTranslationOperation requires configuration of type NLPTranslationOperation.Configuration")
        }

        let headers = [
            "content-type": "application/x-www-form-urlencoded",
            "x-rapidapi-host": "nlp-translation.p.rapidapi.com",
            "x-rapidapi-key": configuration.apiKey,
        ]

        let requestBody = TranslationRequest(
            fromLanguage: configuration.sourceLanguage,
            toLanguage: configuration.targetLanguage,
            text: value,
            protectedWords: configuration.protectedWords
        )

        var request = URLRequest(
            url: kAPIUrl,
            cachePolicy: .reloadIgnoringCacheData,
            timeoutInterval: 30
        )
        request.httpMethod = "POST"
        request.allHTTPHeaderFields = headers
        request.httpBody = requestBody.toFormURLEncodedData

        return request
    }

    static func makeOperation(
        _ key: String,
        _ request: URLRequest
    ) -> Operation {
        TranslationOperation<TranslationResponse>(key: key, request: request)
    }
}
